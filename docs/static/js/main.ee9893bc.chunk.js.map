{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNotes","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finisLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","console","log","message","logout","useForm","useState","values","setValues","reset","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","placeholder","autoCapitalize","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","starRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Componet","rest","props","NotesAppBar","style","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","autoComplete","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","backgroundPosition","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"mMAAaA,EAEF,eAFEA,EAGD,gBAHCA,EAKG,iBALHA,EAMM,oBANNA,EASO,qBATPA,EAUQ,sBAVRA,EAaI,mBAbJA,EAcI,0BAdJA,EAeE,qBAfFA,EAgBK,uBAhBLA,EAkBI,sBAlBJA,EAmBY,2B,gBCAnBC,EAAe,CACjBC,MAAO,GACPC,OAAQ,MCnBNF,EAAe,CACjBG,SAAS,EACTC,SAAU,MCGRC,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAIrGC,EAAWC,YAAgB,CAC7BC,KCVuB,WAA0B,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAGhD,OAAQA,EAAOC,MACX,KAAKf,EACD,MAAO,CACHgB,IAAKF,EAAOG,QAAQD,IACpBE,KAAMJ,EAAOG,QAAQE,aAG7B,KAAKnB,EACD,MAAO,GAEX,QACI,OAAOa,IDHfO,GDLqB,WAAsC,IAApCP,EAAmC,uDAA3BZ,EAAca,EAAa,uCAE1D,OAAQA,EAAOC,MACX,KAAKf,EAED,kCACOa,GADP,IAEIR,SAAUS,EAAOG,UAGzB,KAAKjB,EAED,OAAO,2BACAa,GADP,IAEIR,SAAU,OAGlB,KAAKL,EAED,kCACOa,GADP,IAEIT,SAAS,IAIjB,KAAKJ,EAED,kCACOa,GADP,IAEIT,SAAS,IAGjB,QACI,OAAOS,IC3BfX,MFUwB,WAAqC,IAAnCW,EAAkC,uDAA1BZ,EAAca,EAAY,uCAE5D,OAASA,EAAOC,MAEZ,KAAKf,EACD,OAAO,2BACAa,GADP,IAEIV,OAAO,eACAW,EAAOG,WAItB,KAAKjB,EACD,MAAM,CACFE,MAAM,CAAGY,EAAOG,SAAX,mBAAuBJ,EAAMX,SAG1C,KAAKF,EACD,OAAO,2BACAa,GADP,IAEIX,MAAM,YAAKY,EAAOG,WAG1B,KAAKjB,EACD,kCACOa,GADP,IAEIX,MAAOW,EAAMX,MAAMmB,KACf,SAAAC,GAAI,OAAIA,EAAKC,KAAOT,EAAOG,QAAQM,GAC7BT,EAAOG,QAAQK,KACfA,OAIlB,KAAKtB,EACD,kCACOa,GADP,IAEIV,OAAQ,KACRD,MAAOW,EAAMX,MAAMsB,QAAQ,SAAAF,GAAI,OAAIA,EAAKC,KAAOT,EAAOG,aAG9D,KAAKjB,EACD,kCACOa,GADP,IAEIV,OAAQ,KACRD,MAAO,KAMf,QACI,OAAOW,MEvDNY,EAAQC,YACjBhB,EACAJ,EACIqB,YAAiBC,O,oEEJzBC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAOX,IAAMC,EAAKR,IAASS,YACdC,EAAqB,IAAIV,IAASjB,KAAK4B,mB,iBCrBhCC,EAAU,uCAAG,WAAQC,GAAR,mBAAAC,EAAA,4DAEL,gDAEXC,EAAW,IAAIC,UACZC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQJ,GANF,kBASCK,MAPN,+CAOuB,CAChCC,OAAQ,OACRC,KAAML,IAXQ,YASZM,EATY,QAcRC,GAdQ,kCAeUD,EAAKE,OAff,eAeRC,EAfQ,yBAgBPA,EAAUC,YAhBH,yBAkBFJ,EAAKE,OAlBH,oJAAH,sDCEVG,EAAS,uCAAG,WAAQvC,GAAR,iBAAA2B,EAAA,sEAEGN,EAAGmB,WAAH,UAAkBxC,EAAlB,mBAAwCyC,MAF3C,cAEfC,EAFe,OAIfxD,EAAQ,GAEdwD,EAAUC,SAAS,SAAAC,GACf1D,EAAM2D,KAAN,aACItC,GAAIqC,EAASrC,IACVqC,EAASE,YATC,kBAad5D,GAbc,2CAAH,sDCkCT6D,EAAa,SAAExC,EAAID,GAAN,MAAgB,CAEtCP,KAAMf,EACNiB,QAAQ,aACJM,MACGD,KAKE0C,EAAa,SAAEzC,EAAID,GAAN,MAAiB,CACvCP,KAAMf,EACNiB,QAAQ,aACJM,MAAOD,KAMF2C,EAAoB,SAAEjD,GAC/B,8CAAO,WAAQkD,GAAR,eAAAvB,EAAA,sEACiBY,EAAYvC,GAD7B,OACGd,EADH,OAEHgE,EAAUC,EAAUjE,IAFjB,2CAAP,uDAOSiE,EAAW,SAAEjE,GAAF,MAAc,CAElCa,KAAMf,EACNiB,QAASf,IAKAkE,EAAiB,SAAE9C,GAE5B,8CAAO,WAAQ4C,EAAUG,GAAlB,iBAAA1B,EAAA,6DAEK3B,EAAQqD,IAAWzD,KAAnBI,IAEFM,EAAKgD,YACAhD,EAAKgD,WAGVC,EARH,eAQ0BjD,IACNC,GATpB,SAWGc,EAAGmC,IAAH,UAAWxD,EAAX,0BAAkCM,EAAKC,KAAOkD,OAAQF,GAXzD,OAaHL,EAAUQ,EAAapD,EAAKC,GAAIgD,IAChCI,IAAKC,KAAK,QAAStD,EAAKuD,MAAO,WAd5B,2CAAP,yDAoBSH,EAAc,SAAEnD,EAAID,GAAN,MAAiB,CAExCP,KAAMf,EACNiB,QAAS,CACLM,KACAD,KAAK,aACDC,MACGD,MA6CFwD,EAAa,SAACvD,GAAD,MAAS,CAC/BR,KAAMf,EACNiB,QAASM,ICjJAwD,EAAW,SAAEC,GAAF,MAAY,CAChCjE,KAAMf,EACNiB,QAAS+D,IAaAC,EAAe,iBAAM,CAC9BlE,KAAMf,ICZGkF,EAA0B,SAACC,EAAOC,GAC3C,OAAO,SAAClB,GAEJA,EDG0B,CAC9BnD,KAAMf,ICFF6B,IAASjB,OAAOyE,2BAA4BF,EAAOC,GAClDE,MAAM,YAAe,IAAZC,EAAW,EAAXA,KACNrB,EACIsB,EAAOD,EAAKvE,IAAKuE,EAAKpE,cAE1B+C,EAAUe,QAEbQ,OAAO,SAAAC,GACJC,QAAQC,IAAI,CAACF,MACbxB,EAAUe,KACVN,IAAKC,KAAK,QAASc,EAAEG,QAAS,cAwC7BL,EAAQ,SAACxE,EAAKG,GAAN,MAAsB,CACvCJ,KAAMf,EACNiB,QAAS,CACLD,MACAG,iBAiBK2E,EAAS,iBAAO,CACzB/E,KAAMf,I,OClFG+F,GAAU,WAA0B,IAAxB9F,EAAuB,uDAAR,GAEpC,EAA4B+F,mBAAU/F,GAAtC,mBAAOgG,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAWjG,IAGTmG,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOnF,KAAQmF,EAAOC,UAKhC,MAAO,CAAEL,EAAQG,EAAmBD,I,QCd3BI,GAAc,WAEvB,IAAMrC,EAAWsC,cACVpG,EAAWqG,aAAY,SAAA5F,GAAK,OAAIA,EAAMO,MAAtChB,QAEP,EAAyC2F,GAAQ,CAG7CZ,MAAO,GACPC,SAAU,KAJd,mBAAQsB,EAAR,KAAoBN,EAApB,KAOQjB,EAAoBuB,EAApBvB,MAAOC,EAAasB,EAAbtB,SAcf,OACI,uCACI,qBAAIuB,UAAU,cAAd,mBAEA,wBACIC,SAjBQ,SAAClB,GACjBA,EAAEmB,iBACF3C,EAAUgB,EAA0BC,EAAOC,KAgBnCuB,UAAU,oDAFd,UAII,wBACI5F,KAAK,OACL+F,YAAY,QACZ5F,KAAK,QACLyF,UAAU,cACVI,eAAe,MACfT,MAAOnB,EACP6B,SAAUZ,IAEd,wBACIO,UAAU,cACV5F,KAAK,WACL+F,YAAY,WACZ5F,KAAK,WACLoF,MAAOlB,EACP4B,SAAUZ,IAGd,yBACIrF,KAAK,SACL4F,UAAU,4BACVM,SAAW7G,EAHf,mBASA,uBAAKuG,UAAU,wBAAf,UACI,4DACA,uBACIA,UAAU,aACVO,QA7CM,WAEtBhD,GFsBG,SAAEA,GAELrC,IAASjB,OAAOuG,gBAAiB5E,GAChC+C,MAAM,YAAe,IAAZC,EAAW,EAAXA,KACNrB,EACIsB,EAAOD,EAAKvE,IAAKuE,EAAKpE,qBEclB,UAII,sBAAKwF,UAAU,sBAAf,SACI,sBAAKA,UAAU,cAAcS,IAAI,8EAA8EC,IAAI,oBAEvH,oBAAGV,UAAU,WAAb,SACI,6DAKR,eAAC,IAAD,CACIA,UAAU,OACVW,GAAG,iBAFP,uC,oBCxEPC,GAAiB,WAE1B,IAAMrD,EAAWsC,cACVnG,EAAYoG,aAAa,SAAA5F,GAAK,OAAIA,EAAMO,MAAxCf,SAEPsF,QAAQC,IAAKvF,GAEb,MAAyC0F,GAAQ,CAC7C7E,KAAM,YACNiE,MAAO,iBACPC,SAAU,SACVoC,UAAW,WAJf,mBAAQd,EAAR,KAAoBN,EAApB,KAOQlF,EAAsCwF,EAAtCxF,KAAMiE,EAAgCuB,EAAhCvB,MAAOC,EAAyBsB,EAAzBtB,SAAUoC,EAAed,EAAfc,UAazBC,EAAc,WAEhB,OAA4B,IAAvBvG,EAAKwG,OAAOC,QACbzD,EAAUa,EAAS,sBAEZ,GACE6C,KAAUC,QAAS1C,GAIpBC,IAAaoC,GAAapC,EAASuC,OAAS,GACpDzD,EAAUa,EAAS,6DAEZ,IAGXb,EJ5C0B,CAC9BnD,KAAMf,KI6CK,IAXHkE,EAAUa,EAAS,wBAEZ,IAef,OACI,uCACA,qBAAI4B,UAAU,cAAd,sBAEI,wBACIC,SAxCW,SAAClB,GACpBA,EAAEmB,iBACFlB,QAAQC,IAAK1E,EAAMiE,EAAOC,EAAUoC,GAEhCC,KACAvD,EHHqC,SAAEiB,EAAOC,EAAUlE,GAEhE,OAAO,SAAEgD,GAELrC,IAASjB,OAAOkH,+BAAgC3C,EAAOC,EAAUlE,GAC5DoE,KADL,uCACW,6BAAA3C,EAAA,6DAAQ4C,EAAR,EAAQA,KAAR,SAEGA,EAAKwC,cAAc,CAAE5G,YAAaD,IAFrC,OAGHgD,EACIsB,EAAOD,EAAKvE,IAAKuE,EAAKpE,cAJvB,2CADX,uDAQKsE,OAAO,SAAAC,GACJC,QAAQC,IAAIF,GACZf,IAAKC,KAAK,QAASc,EAAEG,QAAS,aGXxBmC,CAAmC7C,EAAOC,EAAUlE,KAoC1DyF,UAAU,oDAFd,UAKQtG,GAEI,sBAAKsG,UAAU,oBAAf,SACMtG,IAId,wBACIU,KAAK,OACL+F,YAAY,OACZ5F,KAAK,OACLyF,UAAU,cACVI,eAAe,MACfT,MAAOpF,EACP8F,SAAUZ,IAEd,wBACIrF,KAAK,OACL+F,YAAY,QACZ5F,KAAK,QACLyF,UAAU,cACVI,eAAe,MACfT,MAAOnB,EACP6B,SAAUZ,IAEd,wBAAOO,UAAU,cACb5F,KAAK,WACL+F,YAAY,WACZ5F,KAAK,WACLoF,MAAOlB,EACP4B,SAAUZ,IAEd,wBAAOO,UAAU,cACb5F,KAAK,WACL+F,YAAY,kBACZ5F,KAAK,YACLoF,MAAOkB,EACPR,SAAUZ,IAEd,yBACIO,UAAU,iCACV5F,KAAK,SAFT,sBAOA,eAAC,IAAD,CACI4F,UAAU,OACVW,GAAG,cAFP,uCC9GHW,GAAa,WACtB,OACG,sBAAKtB,UAAU,aAAf,SACI,sBAAKA,UAAU,sBAAf,SACC,gBAAC,IAAD,WACQ,eAAC,IAAD,CACIuB,OAAK,EACLC,KAAK,cACLC,UAAY7B,KAEhB,eAAC,IAAD,CACI2B,OAAK,EACLC,KAAK,iBACLC,UAAYb,KAGpB,eAAC,IAAD,CAAUD,GAAG,wB,4CChBhBe,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,mBAGF,OACI,eAAC,IAAD,2BAAYA,GAAZ,IACIJ,UAAY,SAAEK,GAAF,OACNH,EACM,eAACC,EAAD,eAAeE,IACf,eAAC,IAAD,CAAUnB,GAAG,qBCZxBoB,GAAc,WAEvB,IAAMxE,EAAWsC,cACTrG,EAAWsG,aAAY,SAAA5F,GAAK,OAAIA,EAAMX,SAAtCC,OAmBR,OACI,uBAAKwG,UAAU,gBAAf,UACI,sDAEA,wBACIpF,GAAG,eACHR,KAAK,OACLG,KAAK,OACLyH,MAAO,CAAEC,QAAS,QAClB5B,SAhBa,SAACtB,GACtB,IAAMhD,EAAOgD,EAAEW,OAAOwC,MAAM,GACvBnG,GACDwB,ERqFkB,SAAExB,GAC5B,8CAAO,WAAQwB,EAAUG,GAAlB,iBAAA1B,EAAA,6DAEaoB,EAAeM,IAAWnE,MAAlCC,OAERwE,IAAKC,KAAK,CACNC,MAAO,eACPiE,KAAM,cACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,SAAU,WACNtE,IAAKuE,iBAVV,SAcmBzG,EAAYC,GAd/B,OAcGyG,EAdH,OAeHpF,EAAWO,IAAM6E,EAEjBjF,EAAUE,EAAgBL,IAE1BY,IAAKyE,QAnBF,2CAAP,wDQtFkBC,CAAgB3G,OAgB1B,iCACI,yBACIiE,UAAU,MACVO,QA1BW,WACvBoC,SAASC,cAAc,iBAAiBC,SAuBhC,qBAMA,yBACI7C,UAAU,MACVO,QAtCG,WAEfhD,EAAUE,EAAgBjE,KAkClB,yBCzCHsJ,GAAa,WAEtB,IAAMvF,EAAWsC,cAEHlF,EAAQmF,aAAY,SAAA5F,GAAK,OAAIA,EAAMX,SAA1CC,OACP,EAAkD4F,GAASzE,GAA3D,mBAAQoF,EAAR,KAAoBN,EAApB,KAAuCD,EAAvC,KACQlD,EAAoByD,EAApBzD,KAAM4B,EAAc6B,EAAd7B,MAAOtD,EAAOmF,EAAPnF,GAEfmI,EAAWC,iBAAQrI,EAAKC,IAE9BqI,qBAAU,WAEFtI,EAAKC,KAAOmI,EAASG,UACrB1D,EAAO7E,GACPoI,EAASG,QAAUvI,EAAKC,MAI7B,CAACD,EAAM6E,IAEVyD,qBAAU,WAEN1F,EAAUH,EAAY2C,EAAWnF,GAAb,eAAsBmF,OAE3C,CAACA,EAAYxC,IAQhB,OACI,uBAAKyC,UAAU,sBAAf,UAEI,eAAC,GAAD,IAEA,uBAAKA,UAAU,iBAAf,UAEI,wBACI5F,KAAK,OACL+F,YAAY,qBACZH,UAAU,oBACVmD,aAAa,MACb5I,KAAK,QACLoF,MAAOzB,EACPmC,SAAUZ,IAId,2BACIU,YAAY,sBACZH,UAAU,iBACVzF,KAAK,OACLoF,MAAOrD,EACP+D,SAAUZ,IAIT9E,EAAKgD,KAEF,sBAAKqC,UAAU,eAAf,SACI,sBACIS,IAAM9F,EAAKgD,IACX+C,IAAI,gBAQxB,yBACIV,UAAU,iBACVO,QA/CS,WACjBhD,ETsGqB,SAAE3C,GAC3B,8CAAO,WAAQ2C,EAAUG,GAAlB,eAAA1B,EAAA,6DAEG3B,EAAMqD,IAAWzD,KAAKI,IAFzB,SAGGqB,EAAGmC,IAAH,UAAWxD,EAAX,0BAAkCO,IAAOwI,SAH5C,OAKH7F,EAAUY,EAAWvD,IALlB,2CAAP,wDSvGcyI,CAAezI,KA4CrB,wBC5EC0I,GAAkB,WAC3B,OACI,uBAAKtD,UAAU,wBAAf,UACI,mDAEI,wBAFJ,yBAMA,oBAAGA,UAAU,+B,oBCHZuD,GAAe,SAAC,GAAoC,IAAlC3I,EAAiC,EAAjCA,GAAI4I,EAA6B,EAA7BA,KAAMtF,EAAuB,EAAvBA,MAAO5B,EAAgB,EAAhBA,KAAMqB,EAAU,EAAVA,IAE5CJ,EAAWsC,cAEX4D,EAAWC,KAAOF,GAUxB,OACI,uBACIxD,UAAU,oEACVO,QAXiB,WACrBhD,EAAUH,EAAYxC,EAAI,CAClB4I,OAAMtF,QAAO5B,OAAMqB,UAO3B,UAMQA,GACA,sBACAqC,UAAU,yBACVgC,MAAO,CACH2B,eAAgB,QAChBC,gBAAgB,OAAD,OAAUjG,EAAV,KACfkG,mBAAoB,YAI5B,uBAAK7D,UAAU,sBAAf,UACI,oBAAGA,UAAU,uBAAb,SACM9B,IAEN,oBAAG8B,UAAU,yBAAb,SACM1D,OAIV,uBAAK0D,UAAU,0BAAf,UACI,sCAASyD,EAASK,OAAO,QAAzB,OACA,oCAAOL,EAASK,OAAO,MAAvB,cC9CHC,GAAiB,WAE1B,IAAOxK,EAASuG,aAAY,SAAA5F,GAAK,OAAIA,EAAMX,SAApCA,MAMP,OACI,sBAAKyG,UAAU,4BAAf,SAEQzG,EAAMmB,KAAK,SAAAC,GAAI,OACX,eAAC,GAAD,eAEQA,GADEA,EAAKC,UCRtBoJ,GAAU,WAEnB,IAAMzG,EAAWsC,cACTtF,EAASuF,aAAY,SAAA5F,GAAK,OAAIA,EAAMD,QAApCM,KAUR,OACI,yBAAOyF,UAAU,mBAAjB,UACI,uBAAKA,UAAU,0BAAf,UACI,sBAAIA,UAAU,OAAd,UACI,oBAAGA,UAAU,gBACb,sCAASzF,EAAT,UAEJ,yBACIyF,UAAU,MACVO,QAjBK,WACjBhD,EX0DJ,uCAAO,WAAQA,GAAR,SAAAvB,EAAA,sEACGd,IAASjB,OAAOgK,UADnB,OAGH1G,EAAU4B,KAEV5B,EF2EyB,CAC7BnD,KAAMf,IEjFC,2CAAP,wDW5CY,uBASJ,uBACI2G,UAAU,qBACVO,QAtBS,WACjBhD,EbHJ,uCAAO,WAAQA,EAAUG,GAAlB,mBAAA1B,EAAA,6DAEK3B,EAAQqD,IAAWzD,KAAnBI,IAEF6J,EAAU,CACZhG,MAAO,GACP5B,KAAM,GACNkH,MAAM,IAAIW,MAAOC,WAPlB,SAUe1I,EAAGmB,WAAH,UAAiBxC,EAAjB,mBAAsCgK,IAAKH,GAV1D,OAUGrG,EAVH,OAYHN,EAAUH,EAAYS,EAAIjD,GAAIsJ,IAC9B3G,EAAUF,EAAYQ,EAAIjD,GAAIsJ,IAb3B,2CAAP,0DasBQ,UAII,oBAAGlE,UAAU,+BACb,oBAAGA,UAAU,OAAb,0BAGJ,eAAC,GAAD,QCxCCsE,GAAgB,WAEzB,IAAO9K,EAAUsG,aAAY,SAAA5F,GAAK,OAAIA,EAAMX,SAArCC,OAEP,OACI,uBAAKwG,UAAU,0EAAf,UACI,eAAC,GAAD,IACA,gCAGUxG,EACM,eAAC,GAAD,IACA,eAAC,GAAD,U,mCCZf+K,GAAc,SAAC,GAIrB,IAHH5C,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,mBAGF,OACI,eAAC,IAAD,2BAAYA,GAAZ,IACIJ,UAAY,SAAEK,GAAF,OACNH,EACM,eAAC,IAAD,CAAUhB,GAAG,MACb,eAACiB,EAAD,eAAeE,SCI1B0C,GAAY,WAErB,IAAMjH,EAAWsC,cAEjB,EAAgCR,oBAAS,GAAzC,mBAAOoF,EAAP,KAAiBC,EAAjB,KACA,EAAkCrF,oBAAS,GAA3C,mBAAOsF,EAAP,KAAmBC,EAAnB,KAoBA,OAlBA3B,qBAAU,WAEN/H,IAASjB,OAAO4K,mBAAhB,uCAAoC,WAAQjG,GAAR,SAAA5C,EAAA,uDAEhC,OAAK4C,QAAL,IAAKA,OAAL,EAAKA,EAAMvE,MACPkD,EAAUsB,EAAQD,EAAKvE,IAAKuE,EAAKpE,cACjCoK,GAAa,GACbrH,EAAUD,EAAmBsB,EAAKvE,OAGlCuK,GAAa,GAGjBF,GAAa,GAXmB,2CAApC,yDAcD,CAAEnH,EAAUmH,EAAaE,IAEvBH,EAEG,iDAKJ,eAAC,IAAD,UACI,+BACI,gBAAC,IAAD,WACI,eAAC,GAAD,CACIjD,KAAK,QACLC,UAAYH,GACZK,gBAAkBgD,IAEtB,eAAC,GAAD,CACIpD,OAAK,EACLI,gBAAmBgD,EACnBnD,KAAK,IACLC,UAAY6C,KAEhB,eAAC,IAAD,CAAU3D,GAAG,wBC5DpBmE,GAAa,WACtB,OACI,eAAC,IAAD,CAAUhK,MAASA,EAAnB,SACI,eAAC,GAAD,O,OCFZiK,IAASC,OAEL,eAAC,GAAD,IAEFrC,SAASsC,eAAe,W","file":"static/js/main.ee9893bc.chunk.js","sourcesContent":["export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    // Estado del boton\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    //Jounal\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdater: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleanning',\r\n}","/*\r\n    {\r\n        notes: []\r\n        active: null\r\n        active: {\r\n            id: 'efsefsddfsgdfg',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 12345656657\r\n\r\n        }\r\n    }\r\n\r\n\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n         \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdater:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: [],\r\n                \r\n            }\r\n\r\n\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action )  => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            \r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            };\r\n        \r\n        case types.uiRemoveError:\r\n\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            };\r\n        \r\n        case types.uiStartLoading:\r\n            \r\n            return{\r\n                ...state,\r\n                loading: true\r\n                \r\n            };\r\n        \r\n        case types.uiFinishLoading:\r\n\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\n\r\n\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n\r\n","import { types } from '../types/types';\r\n\r\nexport const authReducer = ( state = {}, action )=> {\r\n\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n            \r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","// import firebase from 'firebase/app';\r\n// import 'firebase/firestore';\r\n// import 'firebase/auth';\r\n\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAnJJFQxB_TLJsMdxihWWBbQUEH3u9QgV8\",\r\n    authDomain: \"recat-app-login.firebaseapp.com\",\r\n    projectId: \"recat-app-login\",\r\n    storageBucket: \"recat-app-login.appspot.com\",\r\n    messagingSenderId: \"698282179900\",\r\n    appId: \"1:698282179900:web:26aef25d3fa6e98aa6b239\"\r\n  };\r\n  \r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const app = initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    \r\n    db,\r\n    googleAuthProvider,\r\n    firebase,\r\n}\r\n\r\n\r\n","\r\n\r\nexport const fileUpload = async ( file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/apsis/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file );\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n    // return url de la imagen\r\n}","import { db } from \"../firebase/firebase-config\";\r\n\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n\r\n    const notesSnap = await db.collection( `${uid}/journal/notes` ).get();\r\n\r\n    const notes = []\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n//react-journal\r\n//Image upload: https://api.cloudinary.com/v1_1/apsis/image/upload\r\n\r\n\r\n\r\n\r\n\r\nexport const startNewNote = () =>{\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        \r\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ));\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const activeNote = ( id, note ) =>({\r\n     \r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await loadNotes ( uid );\r\n        dispatch( setNotes( notes ) )\r\n    }\r\n\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n\r\n    type: types.notesLoad,\r\n    payload: notes\r\n\r\n});\r\n\r\n\r\nexport const startSaveNotes = ( note ) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url  ){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n        Swal.fire('Saved', note.title, 'success')\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n\r\n    type: types.notesUpdater,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n});\r\n\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please Wait',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {         \r\n                Swal.showLoading();\r\n            } \r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n        \r\n        dispatch( startSaveNotes( activeNote ) )\r\n\r\n        Swal.close();\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n    // payload: []\r\n})\r\n","import { types } from '../types/types';\r\n\r\n\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err  \r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\n\r\nexport const startLoading = () =>({\r\n    type: types.uiStartLoading\r\n});\r\n\r\n\r\nexport const finisLoading = () =>({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { noteLogout } from './notes';\r\nimport { finisLoading, startLoading } from \"./ui\";\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) =>{\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n        \r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n        .then( ({ user }) => {\r\n            dispatch(\r\n                login( user.uid, user.displayName )\r\n            );\r\n            dispatch( finisLoading() );\r\n        })\r\n        .catch( e => {\r\n            console.log({e});\r\n            dispatch( finisLoading() );\r\n            Swal.fire('Error', e.message, 'error')\r\n        })\r\n    }\r\n}\r\n\r\nexport const starRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password, name )\r\n            .then( async({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const startGoogleLogin = ()=> {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        .then( ({ user }) => {\r\n            dispatch(\r\n                login( user.uid, user.displayName )\r\n\r\n            )\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) =>({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n\r\n    return async ( dispatch ) =>{\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n\r\n        dispatch( noteLogout() )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n    \r\n});\r\n\r\n\r\n\r\n\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState( initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( initialState )\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui);\r\n   \r\n    const  [formValues, handleInputChange] = useForm({\r\n        // email: 'clau@mail.com',\r\n        // password: '123456'\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword ( email, password ) );\r\n        \r\n    }\r\n\r\n    const handleGoogleLogin = () =>{\r\n\r\n        dispatch( startGoogleLogin() );\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoCapitalize=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                \r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick= {handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n                    <Link\r\n                        className=\"link\" \r\n                        to=\"/auth/register\">\r\n                        create new account\r\n                    </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { starRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector( state => state.ui);\r\n\r\n    console.log( msgError )\r\n\r\n    const  [formValues, handleInputChange] = useForm({\r\n        name: 'Clauducce',\r\n        email: 'clau2@mail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2, } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        console.log( name, email, password, password2 );\r\n\r\n        if (isFormValid()) {\r\n            dispatch( starRegisterWithEmailPasswordName( email, password, name ) )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () =>{\r\n\r\n        if ( name.trim().length === 0 ) {\r\n            dispatch( setError('Name is requires') )\r\n            \r\n            return false\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid') )\r\n\r\n            return false\r\n        } else if ( password !== password2 || password.length < 5) {\r\n            dispatch( setError('Password should be at least 6 character and match other') )\r\n\r\n            return false\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        \r\n        return true;\r\n        \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoCapitalize=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoCapitalize=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Pasword\"\r\n                    name=\"password2\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/login\">\r\n                    Already registred?\r\n                </Link>\r\n\r\n            </form>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n       <div className=\"auth__main\">\r\n           <div className=\"auth__box-container\">\r\n            <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                <Redirect to='/auth/login' />\r\n\r\n\r\n            </Switch>\r\n           </div>   \r\n       </div>\r\n\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Componet,\r\n    ...rest\r\n}) => {\r\n\r\n \r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Componet { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        \r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNotes, startUploading } from '../../actions/notes'\r\n\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        \r\n        dispatch( startSaveNotes( active ) )\r\n        \r\n    }\r\n\r\n    const handlePictureClick = ()=> {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ){\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agoste 2020</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {active:note} = useSelector(state => state.notes);\r\n    const [ formValues, handleInputChange, reset ]  = useForm( note );\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id )\r\n\r\n    useEffect(() => {\r\n\r\n        if (note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n\r\n    }, [formValues, dispatch])\r\n\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar/>\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"note__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                >\r\n                </input>\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"note__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n                </textarea>\r\n                {\r\n                    (note.url) \r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                src={ note.url }\r\n                                alt=\"imagen\"\r\n                            />\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Seloect something\r\n                <br/>\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\n\r\n\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const noteDate = moment(date);\r\n   \r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote( id, {\r\n                date, title, body, url\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry  animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n\r\n            {\r\n                url && \r\n                <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${ url })`,\r\n                    backgroundPosition: 'center'\r\n                }}\r\n                ></div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> { noteDate.format('dddd') } </span>\r\n                <h4> { noteDate.format('Do')} </h4>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"journals__entries pointer\">\r\n            {\r\n                notes.map( note =>(\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        {...note}\r\n\r\n                    />\r\n                ))\r\n            }\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes'\r\n\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\n\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { name } = useSelector(state => state.auth)\r\n \r\n    const handleLogout = ()  =>{\r\n        dispatch( startLogout() )\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name  } </span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n                \r\n            </div>\r\n            <JournalEntries/>\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__main-countet animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar/>\r\n            <main>\r\n\r\n                {\r\n                    ( active )\r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected/> )\r\n                }\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Componet,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Componet { ...props } /> )\r\n            )}\r\n        \r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggIn] = useState(false);\r\n  \r\n    useEffect(() => {   // Autentica el user si existe\r\n\r\n        firebase.auth().onAuthStateChanged( async ( user ) =>{\r\n\r\n            if ( user?.uid ) {\r\n                dispatch( login ( user.uid, user.displayName ) );\r\n                setIsLoggIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) )\r\n\r\n            }else {\r\n                setIsLoggIn( false )\r\n            }\r\n\r\n            setChecking( false );\r\n        });\r\n\r\n    }, [ dispatch, setChecking, setIsLoggIn ])\r\n\r\n    if ( checking ) {\r\n        return(\r\n            <h1>Please Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated= { isLoggedIn }\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                    />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store= { store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\n\n\nReactDOM.render(\n  \n    <JournalApp />,\n \n  document.getElementById('root')\n);\n"],"sourceRoot":""}